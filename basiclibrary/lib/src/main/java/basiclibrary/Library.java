/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.Arrays;

public class Library {
    public static void main(String[] args) {

        System.out.println("Roll Method n=4 =>");
        System.out.println(Arrays.toString(roll(4)));

        System.out.println("containsDuplicates Method arr={1, 5, 7, 7, 6} =>");
        System.out.println(containsDuplicates(new int[]{1, 5, 7, 7, 6}));
        System.out.println("containsDuplicates Method arr={1, 5, 7, 6} =>");
        System.out.println(containsDuplicates(new int[]{1, 5, 7, 6}));

        System.out.println("Calculating_Averages Method arr={1, 5, 7, 7, 6} =>");
        System.out.println(Calculating_Averages(new double[]{1, 5, 7, 7, 6}));

        System.out.println("lowest_Average Method arr={\n" +
                "                {66, 64, 58, 65, 71, 57, 60},\n" +
                "                {57, 65, 65, 70, 72, 65, 51},\n" +
                "                {55, 54, 60, 53, 59, 57, 61},\n" +
                "                {65, 56, 55, 52, 55, 62, 57}\n" +
                "        } =>");
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println(Arrays.toString(lowest_Average(weeklyMonthTemperatures)));
    }
    public boolean someLibraryMethod() {
        return true;
    }
    ///////////////////////// Method 1 /////////////////////

    public static int[]  roll(int n){
        int[] array = new int[n];
        for(int i =0 ; i<n ; i++){
            int dice=(int)(Math.random()*6+1);
            array[i]=dice;
        }
        return array;
    }
    ///////////////////////// Method 2 /////////////////////

    public static Boolean containsDuplicates(int[] arr){
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return true;
                }
            }
        }
        return false;
    }
    ///////////////////////// Method 3 /////////////////////
    public  static double Calculating_Averages(double[] arr){
        double avg=0.0;
        double sum=0.0;
        for(int i =0 ; i< arr.length ; i++){
            sum=sum+arr[i];
        }
        avg = sum/arr.length;
        return avg;
    }
    ///////////////////////// Method 4 /////////////////////

    public  static int[] lowest_Average(int[][] arr) {
        double[] avg=new double[arr.length];
        double sum = 0 ;
        for(int i = 0 ; i< arr.length ; i++){
            for( int j = 0 ; j < arr[i].length ; j++){
                sum = sum + arr[i][j];
            }
            avg[i] = sum/arr[i].length;
            sum=0;
        }
        double lowest = avg[0];
        int lowestIdx = 0;
        for(int x=1 ; x<avg.length; x++){
            if(avg[x] <= lowest){
                lowest = avg[x];
                lowestIdx = x;
            }
        }

        return arr[lowestIdx];
    }}
